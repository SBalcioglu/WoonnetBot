name: Build and Release Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # NEW: Download the latest stable chromedriver for Windows
      - name: Download Chromedriver
        run: |
          # Fetch the latest stable chromedriver version and URL from the new JSON endpoints
          $LATEST_URL = "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json"
          $Response = Invoke-RestMethod -Uri $LATEST_URL
          $ChromedriverUrl = $Response.channels.Stable.downloads.chromedriver | Where-Object { $_.platform -eq 'win64' } | Select-Object -ExpandProperty url
          
          # Download and unzip
          Invoke-WebRequest -Uri $ChromedriverUrl -OutFile chromedriver.zip
          Expand-Archive -Path chromedriver.zip -DestinationPath .
          
          # Move chromedriver.exe to the root directory where the .spec file expects it
          Move-Item -Path "chromedriver-win64/chromedriver.exe" -Destination "chromedriver.exe" -Force

      # MODIFIED: Build using the spec file for consistency
      - name: Build the executable from .spec file
        run: pyinstaller WoonnetRijnmondBot.spec

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Automated release for commit ${{ github.sha }}.
            This build includes the WoonnetRijnmondBot application.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/WoonnetRijnmondBot.exe
          asset_name: WoonnetRijnmondBot.exe
          asset_content_type: application/vnd.microsoft.portable-executable